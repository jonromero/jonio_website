<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jon.IO</title><link href="http://jon.io/" rel="alternate"></link><link href="http://jon.io/feeds/startups.atom.xml" rel="self"></link><id>http://jon.io/</id><updated>2013-12-30T18:39:35+01:00</updated><entry><title>Kicking time management in the nuts</title><link href="http://jon.io/kicking-time-management-in-the-nuts.html" rel="alternate"></link><updated>2013-12-30T18:39:35+01:00</updated><author><name>Jon V &lt;h2&gt;BigData. Startups. Trading.&lt;/h2&gt;</name></author><id>tag:jon.io,2013-12-30:kicking-time-management-in-the-nuts.html</id><summary type="html">&lt;p&gt;Building a Startup with pocket money and selling it for tons of cash in just two years, makes you learn a couple of tricks that change your life. One of those is time management.&lt;/p&gt;
&lt;p&gt;Time management is one of the decisive factors of making someone happy. Having lots of time can lead to boredom, having no time can lead to stress and anxiety. The funny thing is that it's so easy jumping from one extreme to the other and impossible to stay "in the zone". &lt;/p&gt;
&lt;p&gt;First of all, let me get something out of my chest: There is no such thing as "I have too many things to do that I need more than 24 hours a day". Bullshit. Even if you had 50 hours per day, you will still be struggling with todos. Why? Because, &lt;em&gt;time is irrelevant&lt;/em&gt;. Everything is about procedures.&lt;/p&gt;
&lt;p&gt;What I really hate about time management is tracking time. It is inefficient, I get bored quickly and you cannot focus 100% on a task everytime for each specific timeslot (unless you are a buddist monk). What I love to do is ticking off tasks. The pleasure of striking out a task that has been on your list for the last couple of weeks is the same as eating a Sundae ice-cream in the sun. Sometimes even better.&lt;/p&gt;
&lt;p&gt;I borrowed one of the most effective ways of "killing" tasks by a project management technic called &lt;a href="http://en.wikipedia.org/wiki/Scrum_(software_development)"&gt;Scrum&lt;/a&gt;. If you are in a Startup and haven't heard of Scrum, prepare to be amazed.&lt;/p&gt;
&lt;p&gt;Based on this method, you create periods of work (called &lt;em&gt;sprints&lt;/em&gt;) and you add things to be done in these periods. Why is this much better than just having a huge todo list? It breaks down tasks in large, high-level time blocks which are easier to manage and easier to extract information about how you (or your team) performs.&lt;/p&gt;
&lt;h2&gt;The Planning fallacy&lt;/h2&gt;
&lt;p&gt;Whenever I talk with a Startup that is struggling to go to a release or prototype, there is a reccuring theme: They all have tasks, some even have milestones but noone has a high-level &lt;em&gt;action&lt;/em&gt; plan on what needs to be done. &lt;/p&gt;
&lt;p&gt;We humans are pretty bad at calculating things that span more than a couple of weeks and what is worse, is that we suck at identifying this. It is an ego thing.&lt;/p&gt;
&lt;p&gt;So, roll up your sleeves and let's do a small test. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a list of all the things you need to do and assign a number of how important this item is (from 1 to 5)&lt;/li&gt;
&lt;li&gt;Add all the values and divide by the number of tasks (this is your average &lt;em&gt;velocity&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Organize the things in two groups (group A and group B). Make sure that each group has a summed value near to your average&lt;/li&gt;
&lt;li&gt;Take the first group (group A) and divide it again in two groups (group C and group D)&lt;/li&gt;
&lt;li&gt;Now, for the next two weeks, focus on resolving all the tasks in group C.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You might be wondering what is the great thing behind this and why this is so effective. First of all, it is a very easy system which translates to a very low abandonment rate. Second, even from the first week, you will be able to calculate your average velocity (which may be totally different from the one you calculated here) and "feel" the progress. And third, you will have a realistic feedback of how much work is for a single task versus the value this task actually delivers.&lt;/p&gt;
&lt;p&gt;What you should do when the second week is done, is to put any unresolved tasks back to the pool of tasks (called the &lt;em&gt;backlog&lt;/em&gt;) and re-organize your groups based on your newly calculated average velocity. As a rule of thumb, you should calculate your velocity every month.  &lt;/p&gt;
&lt;p&gt;Have in mind that there are more sophisticated systems (I'll talk more about them in an upcoming post) but my rule is that first you need something simple that works right now and then you can improve and iterate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.twitter.com/jonromero"&gt;JR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="startups"></category></entry></feed>